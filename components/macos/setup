#!/usr/bin/env zsh

setopt ERR_EXIT PIPEFAIL

() {
  local pamfile=/etc/pam.d/sudo
  local firstline="# sudo: auth account password session"
  local newline="auth       sufficient     pam_tid.so"

  local has_tid=${#$(ls /usr/lib/pam/pam_tid.so*)}
  if [[ $has_tid -gt 0 ]]; then
    if ! grep -q pam_tid.so $pamfile; then
      _log "> Enabling TouchID access for sudo"
      if [[ "$(head -n1 $pamfile)" == "$firstline" ]]; then
        sudo --reset-timestamp
        _log "> Writing $pamfile"
        sudo sed -i .bak -e "s/${firstline}/${firstline}\n${newline}/" "$pamfile"
        sudo rm "${pamfile}.bak"
      else
        _log "> ERROR: $pamfile is in an unexpected format"
        return 1
      fi
    fi
  fi

  local askForPassword=$(defaults read com.apple.screensaver askForPassword || echo 0)
  if [[ $askForPassword -ne 1 ]]; then
    _log "> Enabling screensaver password"
    defaults write com.apple.screensaver askForPassword -int 1
  fi

  local askForPasswordDelay=$(defaults read com.apple.screensaver askForPasswordDelay || echo 1)
  if [[ $askForPasswordDelay -ne 0 ]]; then
    _log "> Setting screensaver password delay to 0"
    defaults write com.apple.screensaver askForPasswordDelay -int 0
  fi

  if ! fdesetup status | grep -q -E 'FileVault is (On|Off, but will be enabled after the next restart).'; then
    _log "> Enabling disk encryption"
    sudo fdesetup enable -user "$USER" | tee "$HOME/Desktop/FileVault Recovery Key.txt"
  fi

  local globalstate=$(defaults read /Library/Preferences/com.apple.alf globalstate || echo 0)
  if [[ $globalstate -ne 1 ]]; then
    _log "> Enabling firewall"
    defaults write /Library/Preferences/com.apple.alf globalstate -int 1
    launchctl load /System/Library/LaunchDaemons/com.apple.alf.agent.plist 2>/dev/null
  fi
} "$@"
